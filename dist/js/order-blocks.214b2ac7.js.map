{"version":3,"sources":["webpack:///../../../src/components/VCard/VCard.ts","webpack:///./src/views/OrderBlocks.vue?3eeb","webpack:///src/views/OrderBlocks.vue","webpack:///./src/views/OrderBlocks.vue?9b67","webpack:///../../../src/components/VDataTable/VEditDialog.ts","webpack:///./src/views/OrderBlocks.vue"],"names":["name","props","flat","hover","img","link","loaderHeight","type","Number","default","raised","Boolean","computed","classes","this","styles","style","methods","genProgress","render","$createElement","staticClass","key","data","h","tag","setBackgroundColor","$slots","_vm","_h","_c","_self","attrs","headersBlocks","blocks","itemRowBackground","dataLoading","scopedSlots","_u","fn","ref","item","on","$event","buyOrderCreated","blockId","model","value","callback","$$v","$set","expression","executedBuyPrice","buyOrderExecuted","cancel","open","close","_v","max25chars","proxy","_s","sellOrderCreated","snackColor","_b","snack","snackText","staticRenderFns","response","ladder","mounted","getActiveBlocks","headers","createInitialBlocks","refreshList","mixins","cancelText","large","eager","persistent","saveText","transition","isActive","watch","setTimeout","focus","input","$refs","content","genButton","text","color","light","click","genActions","class","genContent","keydown","e","VMenu","contentClass","origin","right","closeOnClick","closeOnContentClick","dark","val","activator","component","VBtn","VCard","VCol","VContainer","VDataTable","VEditDialog","VRow","VSimpleCheckbox","VSnackbar","VTextField"],"mappings":"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","file":"js/order-blocks.214b2ac7.js","sourcesContent":["// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-container',[_c('v-row',[_c('v-col',[_c('v-card',[_c('v-data-table',{attrs:{\"headers\":_vm.headersBlocks,\"items\":_vm.blocks,\"item-key\":\"index\",\"item-class\":_vm.itemRowBackground,\"loading\":_vm.dataLoading,\"loading-text\":\"Loading... Please wait\"},scopedSlots:_vm._u([{key:\"item.buyOrderCreated\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('v-simple-checkbox',{on:{\"click\":function($event){return _vm.buyOrderCreated(item.blockId, item.buyOrderCreated)}},model:{value:(item.buyOrderCreated),callback:function ($$v) {_vm.$set(item, \"buyOrderCreated\", $$v)},expression:\"item.buyOrderCreated\"}})]}},{key:\"item.executedBuyPrice\",fn:function(props){return [_c('v-edit-dialog',{attrs:{\"return-value\":props.item.executedBuyPrice,\"large\":\"\",\"persistent\":\"\"},on:{\"update:returnValue\":function($event){return _vm.$set(props.item, \"executedBuyPrice\", $event)},\"update:return-value\":function($event){return _vm.$set(props.item, \"executedBuyPrice\", $event)},\"save\":function($event){return _vm.buyOrderExecuted(\n                    props.item.blockId,\n                    props.item.executedBuyPrice\n                  )},\"cancel\":_vm.cancel,\"open\":_vm.open,\"close\":_vm.close},scopedSlots:_vm._u([{key:\"input\",fn:function(){return [_c('div',{staticClass:\"mt-4 text-h6\"},[_vm._v(\"Update Executed Buy Price\")]),_c('v-text-field',{attrs:{\"rules\":[_vm.max25chars],\"label\":\"Edit\",\"single-line\":\"\",\"counter\":\"\",\"autofocus\":\"\"},model:{value:(props.item.executedBuyPrice),callback:function ($$v) {_vm.$set(props.item, \"executedBuyPrice\", $$v)},expression:\"props.item.executedBuyPrice\"}})]},proxy:true}],null,true)},[_c('div',[_vm._v(_vm._s(props.item.executedBuyPrice))])])]}},{key:\"item.buyOrderExecuted\",fn:function(ref){\n                  var item = ref.item;\nreturn [_c('v-simple-checkbox',{model:{value:(item.buyOrderExecuted),callback:function ($$v) {_vm.$set(item, \"buyOrderExecuted\", $$v)},expression:\"item.buyOrderExecuted\"}})]}},{key:\"item.sellOrderCreated\",fn:function(ref){\n                  var item = ref.item;\nreturn [_c('v-simple-checkbox',{on:{\"click\":function($event){return _vm.sellOrderCreated(item.blockId, item.sellOrderCreated)}},model:{value:(item.sellOrderCreated),callback:function ($$v) {_vm.$set(item, \"sellOrderCreated\", $$v)},expression:\"item.sellOrderCreated\"}})]}},{key:\"item.sellOrderExecuted\",fn:function(ref){\n                  var item = ref.item;\nreturn [_c('v-simple-checkbox',{model:{value:(item.sellOrderExecuted),callback:function ($$v) {_vm.$set(item, \"sellOrderExecuted\", $$v)},expression:\"item.sellOrderExecuted\"}})]}}])})],1)],1)],1),_c('v-snackbar',{attrs:{\"timeout\":3000,\"color\":_vm.snackColor},scopedSlots:_vm._u([{key:\"action\",fn:function(ref){\n                  var attrs = ref.attrs;\nreturn [_c('v-btn',_vm._b({attrs:{\"text\":\"\"},on:{\"click\":function($event){_vm.snack = false}}},'v-btn',attrs,false),[_vm._v(\" Close \")])]}}]),model:{value:(_vm.snack),callback:function ($$v) {_vm.snack=$$v},expression:\"snack\"}},[_vm._v(\" \"+_vm._s(_vm.snackText)+\" \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <v-container>\r\n      <v-row>\r\n        <!--         <v-col>\r\n          <v-data-table\r\n            :headers=\"headers\"\r\n            :items=\"ladder\"\r\n            item-key=\"index\"\r\n            :loading=\"dataLoading\"\r\n            loading-text=\"Loading... Please wait\"\r\n          >\r\n          </v-data-table>\r\n        </v-col> -->\r\n        <v-col>\r\n          <!--           <v-btn elevation=\"2\" color=\"primary\" @click=\"createInitialBlocks\"\r\n            >Populate Blocks</v-btn\r\n          > -->\r\n          <v-card>\r\n            <v-data-table\r\n              :headers=\"headersBlocks\"\r\n              :items=\"blocks\"\r\n              item-key=\"index\"\r\n              :item-class=\"itemRowBackground\"\r\n              :loading=\"dataLoading\"\r\n              loading-text=\"Loading... Please wait\"\r\n            >\r\n              <template v-slot:item.buyOrderCreated=\"{ item }\">\r\n                <v-simple-checkbox\r\n                  v-model=\"item.buyOrderCreated\"\r\n                  @click=\"buyOrderCreated(item.blockId, item.buyOrderCreated)\"\r\n                ></v-simple-checkbox>\r\n              </template>\r\n              <template v-slot:item.executedBuyPrice=\"props\">\r\n                <v-edit-dialog\r\n                  :return-value.sync=\"props.item.executedBuyPrice\"\r\n                  large\r\n                  persistent\r\n                  @save=\"\r\n                    buyOrderExecuted(\r\n                      props.item.blockId,\r\n                      props.item.executedBuyPrice\r\n                    )\r\n                  \"\r\n                  @cancel=\"cancel\"\r\n                  @open=\"open\"\r\n                  @close=\"close\"\r\n                >\r\n                  <div>{{ props.item.executedBuyPrice }}</div>\r\n                  <template v-slot:input>\r\n                    <div class=\"mt-4 text-h6\">Update Executed Buy Price</div>\r\n                    <v-text-field\r\n                      v-model=\"props.item.executedBuyPrice\"\r\n                      :rules=\"[max25chars]\"\r\n                      label=\"Edit\"\r\n                      single-line\r\n                      counter\r\n                      autofocus\r\n                    ></v-text-field>\r\n                  </template>\r\n                </v-edit-dialog>\r\n              </template>\r\n              <template v-slot:item.buyOrderExecuted=\"{ item }\">\r\n                <v-simple-checkbox\r\n                  v-model=\"item.buyOrderExecuted\"\r\n                ></v-simple-checkbox>\r\n              </template>\r\n              <template v-slot:item.sellOrderCreated=\"{ item }\">\r\n                <v-simple-checkbox\r\n                  v-model=\"item.sellOrderCreated\"\r\n                  @click=\"sellOrderCreated(item.blockId, item.sellOrderCreated)\"\r\n                ></v-simple-checkbox>\r\n              </template>\r\n              <template v-slot:item.sellOrderExecuted=\"{ item }\">\r\n                <v-simple-checkbox\r\n                  v-model=\"item.sellOrderExecuted\"\r\n                ></v-simple-checkbox>\r\n              </template>\r\n              <!--             <template v-slot:item=\"{ item }\">\r\n              <tr :class=\"'cyan'\">\r\n                <td> {{item.buyOrderCreated}} </td>\r\n              </tr>\r\n               </template> -->\r\n            </v-data-table>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n      <v-snackbar v-model=\"snack\" :timeout=\"3000\" :color=\"snackColor\">\r\n        {{ snackText }}\r\n        <template v-slot:action=\"{ attrs }\">\r\n          <v-btn v-bind=\"attrs\" text @click=\"snack = false\"> Close </v-btn>\r\n        </template>\r\n      </v-snackbar>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"OrderBlocks\",\r\n  data() {\r\n    return {\r\n      response: \"\",\r\n      ladder: [],\r\n      blocks: [],\r\n      dataLoading: true,\r\n      snack: false,\r\n      snackColor: \"\",\r\n      snackText: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    axios\r\n      .get(\"http://localhost:8080/api/ladders/getactiveladder\")\r\n      .then((response) => {\r\n        this.ladder = response.data.ladderPrices;\r\n        this.dataLoading = false;\r\n      });\r\n    this.getActiveBlocks();\r\n  },\r\n  computed: {\r\n    headers() {\r\n      return [\r\n        { text: \"Buy Price\", value: \"buyPrice\" },\r\n        { text: \"Sell Price\", value: \"sellPrice\" },\r\n        { text: \"Populate Block\", value: \"PopulateBlock\" },\r\n      ];\r\n    },\r\n    headersBlocks() {\r\n      return [\r\n        { text: \"Num Shares\", value: \"numShares\" },\r\n        { text: \"Buy Order\", value: \"buyOrderCreated\" },\r\n        { text: \"Buy Order Price\", value: \"buyOrderPrice\" },\r\n        { text: \"Buy Order Executed\", value: \"buyOrderExecuted\" },\r\n        { text: \"Executed Buy Price\", value: \"executedBuyPrice\" },\r\n        { text: \"Sell Order\", value: \"sellOrderCreated\" },\r\n        { text: \"Sell Order Price\", value: \"sellOrderPrice\" },\r\n        { text: \"Sell Order Executed\", value: \"sellOrderExecuted\" },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    createInitialBlocks() {\r\n      //this.saveCommentProgress = true;\r\n      axios\r\n        .post(\r\n          \"http://localhost:8080/api/blocks/createinitialblocksbyactiveladder\"\r\n        )\r\n        .then((response) => {\r\n          //this.saveCommentProgress = false;\r\n          if (!response.status.HasError) {\r\n            this.blocks = response.data;\r\n            this.snackColor = \"info\";\r\n            this.snackText = \"Block population successful.\";\r\n          } else {\r\n            /*             item.PalletComment = this.oldComment;\r\n            this.snackColor = \"error\";\r\n            this.snackText =\r\n              \"Error while saving comment. \" + response.data.Error; */\r\n          }\r\n          this.snack = true;\r\n        })\r\n        .catch((err) => {\r\n          //this.saveCommentProgress = false;\r\n          //item.PalletComment = this.oldComment;\r\n          this.snackColor = \"error\";\r\n          this.snackText = \"Error while populating blocks. \" + err;\r\n          this.snack = true;\r\n        });\r\n    },\r\n    getActiveBlocks() {\r\n      axios\r\n        .get(\"http://localhost:8080/api/blocks/getactiveblocks\")\r\n        .then((response) => {\r\n          if (!response.status.HasError) {\r\n            this.blocks = response.data;\r\n          } else {\r\n            alert(\"test\");\r\n          }\r\n        });\r\n    },\r\n    buyOrderCreated(blockId, buyOrderCreated) {\r\n      // Implement PUT on block backend for buy order created (pass block id, and buy price) use popup to ask for actual buy price\r\n      axios\r\n        .put(\r\n          \"http://localhost:8080/api/blocks/UpdateBuyOrderCreated/\" +\r\n            blockId +\r\n            \"/\" +\r\n            buyOrderCreated\r\n        )\r\n        .then((response) => {\r\n          //this.saveCommentProgress = false;\r\n          if (response.status === 204) {\r\n            this.snackColor = \"info\";\r\n            this.snackText = \"Successfully updated block.\";\r\n          } else {\r\n            /*             item.PalletComment = this.oldComment;\r\n            this.snackColor = \"error\";\r\n            this.snackText =\r\n              \"Error while saving comment. \" + response.data.Error; */\r\n          }\r\n          this.snack = true;\r\n        })\r\n        .catch((err) => {\r\n          //this.saveCommentProgress = false;\r\n          //item.PalletComment = this.oldComment;\r\n          this.snackColor = \"error\";\r\n          this.snackText = \"Error while updating block. \" + err;\r\n          this.snack = true;\r\n        });\r\n    },\r\n    buyOrderExecuted(blockId, executedBuyPrice) {\r\n      // Implement PUT on block backend for buy order created (pass block id, and buy price) use popup to ask for actual buy price\r\n      axios\r\n        .put(\r\n          \"http://localhost:8080/api/blocks/UpdateBuyOrderExecutedAndPrice/\" +\r\n            blockId +\r\n            \"/\" +\r\n            executedBuyPrice\r\n        )\r\n        .then((response) => {\r\n          //this.saveCommentProgress = false;\r\n          if (response.status === 200) {\r\n            this.refreshList();\r\n            this.snackColor = \"info\";\r\n            this.snackText = \"Successfully updated block.\";\r\n          } else {\r\n            /*             item.PalletComment = this.oldComment;\r\n            this.snackColor = \"error\";\r\n            this.snackText =\r\n              \"Error while saving comment. \" + response.data.Error; */\r\n          }\r\n          this.snack = true;\r\n        })\r\n        .catch((err) => {\r\n          //this.saveCommentProgress = false;\r\n          //item.PalletComment = this.oldComment;\r\n          this.snackColor = \"error\";\r\n          this.snackText = \"Error while populating blocks. \" + err;\r\n          this.snack = true;\r\n        });\r\n    },\r\n    sellOrderCreated(blockId, sellOrderCreated) {\r\n      axios\r\n        .put(\r\n          \"http://localhost:8080/api/blocks/UpdateSellOrderCreated/\" +\r\n            blockId +\r\n            \"/\" +\r\n            sellOrderCreated\r\n        )\r\n        .then((response) => {\r\n          //this.saveCommentProgress = false;\r\n          if (response.status === 204) {\r\n            this.snackColor = \"info\";\r\n            this.snackText = \"Successfully updated block.\";\r\n          } else {\r\n            /*             item.PalletComment = this.oldComment;\r\n            this.snackColor = \"error\";\r\n            this.snackText =\r\n              \"Error while saving comment. \" + response.data.Error; */\r\n          }\r\n          this.snack = true;\r\n        })\r\n        .catch((err) => {\r\n          //this.saveCommentProgress = false;\r\n          //item.PalletComment = this.oldComment;\r\n          this.snackColor = \"error\";\r\n          this.snackText = \"Error while updating block. \" + err;\r\n          this.snack = true;\r\n        });\r\n    },\r\n    itemRowBackground: function (item) {\r\n      if (item.sellOrderCreated) {\r\n        return \"red\";\r\n      } else if (item.buyOrderExecuted) {\r\n        return \"green\";\r\n      } else if (item.buyOrderCreated) {\r\n        return \"blue\";\r\n      }\r\n    },\r\n    refreshList() {\r\n      this.getActiveBlocks(); // todo: get all active blocks\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrderBlocks.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrderBlocks.vue?vue&type=script&lang=js&\"","// Styles\nimport './VEditDialog.sass'\n\n// Mixins\nimport Returnable from '../../mixins/returnable'\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Component\nimport VBtn from '../VBtn'\nimport VMenu from '../VMenu'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Returnable, Themeable).extend({\n  name: 'v-edit-dialog',\n\n  props: {\n    cancelText: {\n      default: 'Cancel',\n    },\n    large: Boolean,\n    eager: Boolean,\n    persistent: Boolean,\n    saveText: {\n      default: 'Save',\n    },\n    transition: {\n      type: String,\n      default: 'slide-x-reverse-transition',\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.$emit('open')\n        setTimeout(this.focus, 50) // Give DOM time to paint\n      } else {\n        this.$emit('close')\n      }\n    },\n  },\n\n  methods: {\n    cancel () {\n      this.isActive = false\n      this.$emit('cancel')\n    },\n    focus () {\n      const input = (this.$refs.content as Element).querySelector('input')\n      input && input.focus()\n    },\n    genButton (fn: Function, text: VNodeChildren): VNode {\n      return this.$createElement(VBtn, {\n        props: {\n          text: true,\n          color: 'primary',\n          light: true,\n        },\n        on: { click: fn },\n      }, text)\n    },\n    genActions (): VNode {\n      return this.$createElement('div', {\n        class: 'v-small-dialog__actions',\n      }, [\n        this.genButton(this.cancel, this.cancelText),\n        this.genButton(() => {\n          this.save(this.returnValue)\n          this.$emit('save')\n        }, this.saveText),\n      ])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-small-dialog__content',\n        on: {\n          keydown: (e: KeyboardEvent) => {\n            e.keyCode === keyCodes.esc && this.cancel()\n            if (e.keyCode === keyCodes.enter) {\n              this.save(this.returnValue)\n              this.$emit('save')\n            }\n          },\n        },\n        ref: 'content',\n      }, [this.$slots.input])\n    },\n  },\n\n  render (h): VNode {\n    return h(VMenu, {\n      staticClass: 'v-small-dialog',\n      class: this.themeClasses,\n      props: {\n        contentClass: 'v-small-dialog__menu-content',\n        transition: this.transition,\n        origin: 'top right',\n        right: true,\n        value: this.isActive,\n        closeOnClick: !this.persistent,\n        closeOnContentClick: false,\n        eager: this.eager,\n        light: this.light,\n        dark: this.dark,\n      },\n      on: {\n        input: (val: boolean) => (this.isActive = val),\n      },\n      scopedSlots: {\n        activator: ({ on }) => {\n          return h('div', {\n            staticClass: 'v-small-dialog__activator',\n            on,\n          }, [\n            h('span', {\n              staticClass: 'v-small-dialog__activator__content',\n            }, this.$slots.default),\n          ])\n        },\n      },\n    }, [\n      this.genContent(),\n      this.large ? this.genActions() : null,\n    ])\n  },\n})\n","import { render, staticRenderFns } from \"./OrderBlocks.vue?vue&type=template&id=752a27c2&scoped=true&\"\nimport script from \"./OrderBlocks.vue?vue&type=script&lang=js&\"\nexport * from \"./OrderBlocks.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"752a27c2\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VEditDialog } from 'vuetify/lib/components/VDataTable';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSimpleCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCard,VCol,VContainer,VDataTable,VEditDialog,VRow,VSimpleCheckbox,VSnackbar,VTextField})\n"],"sourceRoot":""}